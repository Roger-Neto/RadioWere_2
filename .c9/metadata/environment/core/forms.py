{"filter":false,"title":"forms.py","tooltip":"/core/forms.py","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["from django.apps import AppConfig","","","class CoreConfig(AppConfig):","    default_auto_field = 'django.db.models.BigAutoField'","    name = 'core'",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":24,"column":30},"action":"insert","lines":["from django.contrib.auth.models import User","from django import forms","","class UserRegistrationForm(forms.ModelForm):","","    password = forms.CharField(label=\"Password\", widget=forms.PasswordInput)","    password2 = forms.CharField(label=\"Repita a senha\", widget=forms.PasswordInput)","","    class Meta:","        model = User","        fields = (\"username\", 'first_name', 'email')","","        labels = {","            \"username\": \"Usuário\",","            \"first_name\": \"Nome\",","            \"email\": \"E-mail\",","        }","","    # 'clean_nomedocampo' pode ser usado para limpar ou validar o formulário.","    # ele é automaticamente chamado pelo método 'clean' do ModelForm","    def clean_password2(self):","        cd = self.cleaned_data","        if cd['password'] != cd['password2']:","            raise forms.ValidationError(\"Passwords são diferentes\")","        return cd['password2']"]}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":68},"action":"remove","lines":["    # 'clean_nomedocampo' pode ser usado para limpar ou validar o formulário.","    # ele é automaticamente chamado pelo método 'clean' do ModelForm"],"id":4},{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":22,"column":30},"end":{"row":22,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1739571261477,"hash":"5ee3f295b20a816bfe0c18c341e84b806a46a446"}